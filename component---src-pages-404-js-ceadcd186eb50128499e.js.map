{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Layout.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","Header","_ref","siteTitle","react_default","gatsby_browser_entry","to","className","propTypes","PropTypes","string","defaultProps","Layout","children","query","render","data","react","components_Header_Header","site","siteMetadata","_755544856","node","isRequired","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf","object"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,OACXP,EAAAK,EAAAC,cAAA,iBACAN,EAAAK,EAAAC,cAAA,mMCHEE,UAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACbC,EAAAN,EAAAC,cAAA,cACEK,EAAAN,EAAAC,cAAA,UACEK,EAAAN,EAAAC,cAACM,EAAA,KAAD,CAAMC,GAAG,IAAIC,UAAU,aAAaJ,OAK1CF,EAAOO,UAAY,CACjBL,UAAWM,IAAUC,QAGvBT,EAAOU,aAAe,CACpBR,UAAS,IAGIF,QCdTW,iBAAS,SAAAV,GAAA,IAAGW,EAAHX,EAAGW,SAAH,OACbT,EAAAN,EAAAC,cAACM,EAAA,YAAD,CACES,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVZ,EAAAN,EAAAC,cAACkB,EAAA,SAAD,KACEb,EAAAN,EAAAC,cAACmB,EAAD,CAAQf,UAAWa,EAAKG,KAAKC,aAAapB,QAC1CI,EAAAN,EAAAC,cAAA,OAAKQ,UAAU,WACbH,EAAAN,EAAAC,cAAA,YAAOc,MAdfG,KAAAK,MAqBFT,EAAOJ,UAAY,CACjBK,SAAUJ,IAAUa,KAAKC,YAGZX,uGCtBf,SAASY,EAATtB,GAA2D,IAA5CuB,EAA4CvB,EAA5CuB,YAAaC,EAA+BxB,EAA/BwB,KAAMC,EAAyBzB,EAAzByB,KAAMC,EAAmB1B,EAAnB0B,SAAU5B,EAASE,EAATF,MACxCmB,EADiDU,EAAAb,KACjDG,KAcFW,EAAkBL,GAAeN,EAAKC,aAAaK,YAEzD,OACEM,EAAAjC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,eAAgB,CACdP,QAEF1B,MAAOA,EACPkC,cAAa,QAAUf,EAAKC,aAAapB,MACzC2B,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASpC,GAEX,CACEqC,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASjB,EAAKC,aAAakB,QAE7B,CACEH,KAAI,gBACJC,QAASpC,GAEX,CACEmC,KAAI,sBACJC,QAASN,IAGVS,OACCX,EAASY,OAAS,EACd,CACEL,KAAI,WACJC,QAASR,EAASa,KAAT,OAEX,IAELF,OAAOZ,KAKhBH,EAAIb,aAAe,CACjBe,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAIhB,UAAY,CACdiB,YAAahB,IAAUC,OACvBgB,KAAMjB,IAAUC,OAChBiB,KAAMlB,IAAUiC,QAAQjC,IAAUkC,QAClCf,SAAUnB,IAAUiC,QAAQjC,IAAUC,QACtCV,MAAOS,IAAUC,OAAOa,YAGXC","file":"component---src-pages-404-js-ceadcd186eb50128499e.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"no\" />\n    <h1>no.</h1>\n    <p>this doesn't exist.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./Header.less\";\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <h1>\n      <Link to=\"/\" className=\"siteTitle\">{siteTitle}</Link>\n    </h1>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./Header/Header\";\nimport \"./Normalize.css\";\nimport \"./Layout.less\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"content\">\n          <main>{children}</main>\n        </div>\n      </Fragment>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}