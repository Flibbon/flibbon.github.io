{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Layout.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","Home","_ref","posts","data","allMarkdownRemark","edges","a","createElement","title","className","to","filter","post","node","frontmatter","length","map","_ref2","path","key","id","date","excerpt","Header","siteTitle","react_default","gatsby_browser_entry","propTypes","PropTypes","string","defaultProps","Layout","children","query","render","react","components_Header_Header","site","siteMetadata","_755544856","isRequired","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","arrayOf","object"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAwCaI,EAAS,aAkBPO,UApDF,SAAAC,GAAc,IACVC,EADUD,EAAXE,KACgBC,kBAAtBC,MACR,OACEV,EAAAW,EAAAC,cAACT,EAAA,EAAD,KACEH,EAAAW,EAAAC,cAACR,EAAA,EAAD,CAAKS,MAAM,SACXb,EAAAW,EAAAC,cAAA,OAAKE,UAAU,QACbd,EAAAW,EAAAC,cAAA,iBACAZ,EAAAW,EAAAC,cAAA,wEACAZ,EAAAW,EAAAC,cAACV,EAAA,KAAD,CAAMa,GAAG,aAAT,eAEFf,EAAAW,EAAAC,cAAA,WACEZ,EAAAW,EAAAC,cAAA,oBACCL,EACES,OAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYN,MAAMO,OAAS,IACpDC,IAAI,SAAAC,GAAoB,IAAXL,EAAWK,EAAjBJ,KACN,OACElB,EAAAW,EAAAC,cAACV,EAAA,KAAD,CAAMa,GAAIE,EAAKE,YAAYI,KAAMC,IAAKP,EAAKQ,GAAIX,UAAU,YACvDd,EAAAW,EAAAC,cAAA,OAAKE,UAAU,iBACbd,EAAAW,EAAAC,cAAA,OAAKE,UAAU,cACbd,EAAAW,EAAAC,cAAA,MAAIE,UAAU,aACTG,EAAKE,YAAYN,OAEtBb,EAAAW,EAAAC,cAAA,KAAGE,UAAU,YAAYG,EAAKE,YAAYO,OAE5C1B,EAAAW,EAAAC,cAAA,KAAGE,UAAU,eAAeG,EAAKU,iLCxB7CC,UAAS,SAAAtB,GAAA,IAAGuB,EAAHvB,EAAGuB,UAAH,OACbC,EAAAnB,EAAAC,cAAA,cACEkB,EAAAnB,EAAAC,cAAA,UACEkB,EAAAnB,EAAAC,cAACmB,EAAA,KAAD,CAAMhB,GAAG,IAAID,UAAU,aAAae,OAK1CD,EAAOI,UAAY,CACjBH,UAAWI,IAAUC,QAGvBN,EAAOO,aAAe,CACpBN,UAAS,IAGID,QCdTQ,iBAAS,SAAA9B,GAAA,IAAG+B,EAAH/B,EAAG+B,SAAH,OACbP,EAAAnB,EAAAC,cAACmB,EAAA,YAAD,CACEO,MAAK,YASLC,OAAQ,SAAA/B,GAAI,OACVsB,EAAAnB,EAAAC,cAAC4B,EAAA,SAAD,KACEV,EAAAnB,EAAAC,cAAC6B,EAAD,CAAQZ,UAAWrB,EAAKkC,KAAKC,aAAa9B,QAC1CiB,EAAAnB,EAAAC,cAAA,OAAKE,UAAU,WACbgB,EAAAnB,EAAAC,cAAA,YAAOyB,MAdf7B,KAAAoC,MAqBFR,EAAOJ,UAAY,CACjBK,SAAUJ,IAAUf,KAAK2B,YAGZT,uGCtBf,SAASU,EAATxC,GAA2D,IAA5CyC,EAA4CzC,EAA5CyC,YAAaC,EAA+B1C,EAA/B0C,KAAMC,EAAyB3C,EAAzB2C,KAAMC,EAAmB5C,EAAnB4C,SAAUrC,EAASP,EAATO,MACxC6B,EADiDS,EAAA3C,KACjDkC,KAcFU,EAAkBL,GAAeL,EAAKC,aAAaI,YAEzD,OACEM,EAAA1C,EAAAC,cAAC0C,EAAA3C,EAAD,CACE4C,eAAgB,CACdP,QAEFnC,MAAOA,EACP2C,cAAa,QAAUd,EAAKC,aAAa9B,MACzCoC,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS7C,GAEX,CACE8C,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAShB,EAAKC,aAAaiB,QAE7B,CACEH,KAAI,gBACJC,QAAS7C,GAEX,CACE4C,KAAI,sBACJC,QAASN,IAGVS,OACCX,EAAS9B,OAAS,EACd,CACEqC,KAAI,WACJC,QAASR,EAASY,KAAT,OAEX,IAELD,OAAOZ,KAKhBH,EAAIX,aAAe,CACjBa,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAId,UAAY,CACde,YAAad,IAAUC,OACvBc,KAAMf,IAAUC,OAChBe,KAAMhB,IAAU8B,QAAQ9B,IAAU+B,QAClCd,SAAUjB,IAAU8B,QAAQ9B,IAAUC,QACtCrB,MAAOoB,IAAUC,OAAOW,YAGXC","file":"component---src-pages-index-js-17916491a9d6d43de4fc.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\n\nconst Home = ({ data }) => {\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <SEO title=\"home\" />\n      <div className=\"main\">\n        <h2>hi.</h2>\n        <p>personal website. it's a work in progress. but who's isn't.</p>\n        <Link to=\"/contact/\">contact me</Link>\n      </div>\n      <div>\n        <h2>posts.</h2>\n        {posts\n          .filter(post => post.node.frontmatter.title.length > 0)\n          .map(({ node: post }) => {\n            return (\n              <Link to={post.frontmatter.path} key={post.id} className=\"postLink\">\n                <div className=\"postContainer\">\n                  <div className=\"postHeader\">\n                    <h3 className=\"postTitle\">\n                        {post.frontmatter.title}\n                    </h3>\n                    <p className=\"postDate\">{post.frontmatter.date}</p>\n                  </div>\n                  <p className=\"postExcerpt\">{post.excerpt}</p>\n                </div>\n              </Link>\n            );\n          })}\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 120)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Home;\n","import { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./Header.css\";\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <h1>\n      <Link to=\"/\" className=\"siteTitle\">{siteTitle}</Link>\n    </h1>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./Header/Header\";\nimport \"./Normalize.css\";\nimport \"./Layout.css\";\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"content\">\n          <main>{children}</main>\n        </div>\n      </Fragment>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}